// Code generated by hertz generator.

package handler

import (
	"errors"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol"
	log "github.com/sirupsen/logrus"
	"hz_demo/biz/model"
)

func GetLoginInfoFromRequest(c *app.RequestContext) *model.User {
	// get specific key
	cookieVal := c.Cookie(COOKIE_KRY)
	if cookieVal == nil {
		log.Infof("cookie is null")
		return nil
	}
	log.Debugf("get cookie info=%s", string(cookieVal))
	if v, err := LoginCachePtr.GetLoginUser(string(cookieVal)); err == nil {
		return v
	}
	return nil
}

func DeleteCookieFromRequest(c *app.RequestContext) {
	// get specific key
	cookieObj := protocol.AcquireCookie()
	cookieObj.SetKey(COOKIE_KRY)
	cookieObj.SetPath("/")
	cookieObj.SetExpire(protocol.CookieExpireDelete)
	c.Response.Header.SetCookie(cookieObj)
	protocol.ReleaseCookie(cookieObj)
}

type LoginCache map[string]*model.User

var LoginCachePtr *LoginCache

func NewLoginCache() *LoginCache {
	return &LoginCache{}
}

func (p *LoginCache) SetLoginUser(cookieVal string, user *model.User) {
	(*p)[cookieVal] = user
}

func (p *LoginCache) GetLoginUser(cookieVal string) (*model.User, error) {
	if v, ok := (*LoginCachePtr)[cookieVal]; ok {
		return v, nil
	} else {
		return nil, errors.New("user_cookie_notfound")
	}
}
